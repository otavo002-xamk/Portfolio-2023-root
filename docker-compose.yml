version: "3.8"

services:
  front-end:
    #Uncomment the following line to build the image from the Dockerfile in the front-end directory
    #build: ./portfolio-2023
    #Comment the following line if you uncomment the previous line
    image: woudisnakes/portfolio-2023-front:latest
    command: npm start
    ports:
      - 3000:3000
    volumes:
      - ./portfolio-2023:/usr/src/app
      - ./portfolio-2023/node_modules:/usr/src/app/node_modules
    container_name: front-end
    environment:
      - REACT_APP_DBURL=http://back-end:3001
  back-end:
    #Uncomment the following line to build the image from the Dockerfile in the portfolio-server directory
    #build: ./portfolio-server
    #Comment the following line if you uncomment the previous line
    image: woudisnakes/portfolio-2023-back:latest
    command: npm start
    ports:
      - 3001:3001
    volumes:
      - ./portfolio-server:/usr/src/app
    container_name: back-end
    env_file: .env
    environment:
      - PORT=${PORT}
      - HOST=db
      - DBUSER=${DBUSER}
      - PASSWORD=${PASSWORD}
      - DATABASE=${DATABASE}
      - DBPORT=${DBPORT}
      - DB_RANDOM_TABLE_NAME=${DB_RANDOM_TABLE_NAME}
      - FRONT_END_URL=${FRONT_END_URL}
    depends_on:
      - db
  db:
    image: mysql:8
    restart: always
    container_name: db
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE}
      - MYSQL_INIT_SCRIPTS=/docker-entrypoint-initdb.d/init.sql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root"]
      interval: 10s
      timeout: 5s
      retries: 5
  tests:
    #Comment the following line if you uncomment the next line
    image: woudisnakes/portfolio-2023-tests:latest
    #Uncomment the following line to build the image from the Dockerfile in the tests directory
    #build: ./Portfolio-2023-RF-Tests
    volumes:
      - ./Portfolio-2023-RF-Tests:/app/tests
      - ./logs:/app/logs
    depends_on:
      - front-end
      - back-end
      - db
    env_file: .env
    environment:
      - BROWSER=headlessfirefox
      - HOST=http://front-end:3000
      - BROWSER_OPENING=${BROWSER_OPENING}
      - EMPTY_TABLE=${EMPTY_TABLE}
      - FILLED_TABLE=${FILLED_TABLE}
    command: >
      sh -c "while ! curl -s http://front-end:3000 > /dev/null; do sleep 1; done &&
             rm -f /tmp/.X99-lock &&
             Xvfb :99 -screen 0 1920x1080x24 &
             sleep 10 && 
             robot --outputdir /app/logs Database.robot Math_Game.robot NASA_API.robot Slideshow.robot static_parts.robot && 
             pkill Xvfb"

volumes:
  mysql_data:
  node_modules:
