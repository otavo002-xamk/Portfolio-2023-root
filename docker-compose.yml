version: '3.8'

services:
  front-end:
    build: ./front-end
    command: npm start
    ports:
      - 3000:3000
    volumes:
      - ./front-end:/usr/src/app
      - ./front-end/node_modules:/usr/src/app/node_modules
    container_name: front-end
  back-end:
    build: ./portfolio-server
    command: npm start
    ports:
      - 3001:3001
    volumes:
      - ./portfolio-server:/usr/src/app
    container_name: back-end
    env_file: .env
    environment:
      - PORT=${PORT}
      - HOST=${HOST}
      - DBUSER=${DBUSER}
      - PASSWORD=${PASSWORD}
      - DATABASE=${DATABASE}
      - DBPORT=${DBPORT}
      - DB_RANDOM_TABLE_NAME=${DB_RANDOM_TABLE_NAME}
      - DB_RANDOM_TABLE_NAME_JSON_FILE=${DB_RANDOM_TABLE_NAME_JSON_FILE}
      - FRONT_END_URL=${FRONT_END_URL}
    depends_on:
      - db
  db:
    image: mysql:8
    restart: always
    container_name: db
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE}
      - MYSQL_INIT_SCRIPTS=/docker-entrypoint-initdb.d/init.sql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -u root']
      interval: 10s
      timeout: 5s
      retries: 5
  services:
  tests:
    build: ./tests
    command: >
      sh -c "killall Xvfb || true &&
            Xvfb :99 -ac -screen 0 1920x1080x24 &
            export DISPLAY=:99 &&
            robot Slideshow.robot &&
            killall Xvfb || true"
    depends_on:
      - front-end
    networks:
      - portfolio-network

volumes:
  mysql_data:
  node_modules:
