version: "3.8"

services:
  front-end:
    #Uncomment the following 4 lines to build the image locally.
    #build:
    #context: ./portfolio-2023
    #args:
    #  - REACT_APP_BACKEND_URL=http://back-end:3001
    #Comment the following line if you uncomment the previous lines.
    image: woudisnakes/portfolio-2023-front-prod:latest
    ports:
      - 80:80
    container_name: front-end
    healthcheck:
      test: ["CMD", "curl", "http://front-end:80"]
      interval: 10s
      timeout: 240s
      retries: 20
      start_period: 0s
  back-end:
    #Uncomment the following line to build the image from the Dockerfile in the portfolio-server directory
    #build: ./portfolio-server
    #Comment the following line if you uncomment the previous line
    image: woudisnakes/portfolio-2023-back:latest
    command: npm start
    ports:
      - 3001:3001
    volumes:
      - ./portfolio-server:/usr/src/app
    container_name: back-end
    env_file: .env
    environment:
      - PORT=${PORT}
      - HOST=db
      - DBUSER=${DBUSER}
      - DATABASE=${DATABASE}
      - DBPORT=${DBPORT}
      - DB_RANDOM_TABLE_NAME=${DB_RANDOM_TABLE_NAME}
      - DB_RANDOM_TABLE_NAME_JSON_FILE=${DB_RANDOM_TABLE_NAME_JSON_FILE}
      - FRONT_END_URL=${FRONT_END_URL}
      - PASSWORD_FILE=/run/secrets/password
      - NASA_API_TOKEN=${NASA_API_TOKEN}
    secrets:
      - password
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://back-end:3001"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 0s
  db:
    image: mysql:8
    restart: always
    container_name: db
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
      - MYSQL_DATABASE=${DATABASE}
      - MYSQL_INIT_SCRIPTS=/docker-entrypoint-initdb.d/init.sql
      - MYSQL_USER=${DBUSER}
      - MYSQL_PASSWORD_FILE=/run/secrets/password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - mysql_root_password
      - password
  tests:
    #Comment the following line if you uncomment the next line
    image: woudisnakes/portfolio-2023-tests:latest
    #Uncomment the following line to build the image from the Dockerfile in the tests directory
    #build: ./Portfolio-2023-RF-Tests
    volumes:
      - ./Portfolio-2023-RF-Tests/Portfolio-2023-RPA-tests:/app
      - ./logs:/app/logs
      - ./Portfolio-2023-RF-Tests/Portfolio-2023-RPA-tests/jsonfiles:/app/jsonfiles
    depends_on:
      front-end:
        condition: service_healthy
      back-end:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file: .env
    environment:
      - BROWSER=headlessfirefox
      - HOST=http://front-end:80
      - BROWSER_OPENING=${BROWSER_OPENING}
      - EMPTY_TABLE=${EMPTY_TABLE}
      - FILLED_TABLE=${FILLED_TABLE}
    command: >
      sh -c "rm -f /tmp/.X99-lock && \
            Xvfb :99 -screen 0 1920x1080x24 & \
            sleep 5 && \
            robot --outputdir /app/logs --exclude with_no_connection Database.robot Math_Game.robot NASA_API.robot Slideshow.robot static_parts.robot && \
            pkill Xvfb"

volumes:
  mysql_data:
  node_modules:

secrets:
  password:
    file: password.txt
  mysql_root_password:
    file: mysql_root_password.txt
